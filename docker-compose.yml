version: '3.5'

services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:7.1.0"
    hostname: zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: nc -vz localhost 2181
      interval: 5s
      timeout: 30s
      retries: 5
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: "confluentinc/cp-enterprise-kafka:7.1.0"
    hostname: kafka
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: nc -vz localhost 9092
      interval: 5s
      timeout: 30s
      retries: 5
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "drone-report:1:1"

  schema-registry:
    image: "confluentinc/cp-schema-registry:7.1.0"
    hostname: schema-registry
    ports:
      - 8081:8081
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://schema-registry:8081/
      interval: 5s
      timeout: 30s
      retries: 5
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  minio:
    image: minio/minio:RELEASE.2022-06-07T00-33-41Z.fips
    volumes:
      - ./data:/data
    hostname: minio
    ports:
        - 9000:9000
        - 9001:9001
    command: server /data --console-address ":9001"
    healthcheck:
      test: curl http://minio:9000
      interval: 3s
      timeout: 30s
      retries: 5
    environment:
        MINIO_ROOT_USER: minioadmin
        MINIO_ROOT_PASSWORD: minioadmin

  kafka-connect:
    image: srvc_connect
    build: srvc_connect
    ports:
      - 8083:8083
    depends_on:
      minio:
        condition: service_started
      schema-registry:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://srvc_connect:8083/connectors
      interval: 3s
      timeout: 30s
      retries: 5
    environment:
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: srvc_connect
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost

      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081

      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter

      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter

      CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components

  init-kafka-connector:
    image: minio/mc:RELEASE.2022-05-09T04-08-26Z
    volumes:
      - './srvc_connect:/srvc_connect'
    depends_on:
      kafka-connect:
        condition: service_started
    restart: on-failure
    entrypoint: sh /srvc_connect/init-connector.sh

  srvc_drone:
    image: srvc_drone
    build: .
    command: /ops/sbt/bin/sbt "project srvc_drone" run
    depends_on:
      schema-registry:
        condition: service_healthy

  srvc_analysis:
    image: srvc_analysis
    build: .
    command: /ops/sbt/bin/sbt "project srvc_analysis" run
    depends_on:
      init-kafka-connector:
        condition: service_started
      schema-registry:
        condition: service_healthy

  srvc_alert:
    image: srvc_alert
    build: .
    command: /ops/sbt/bin/sbt "project srvc_alert" run
    depends_on:
      srvc_back:
        condition: service_started

  srvc_back:
    image: srvc_back
    build: .
    hostname: srvc_back
    ports:
      - 8080:8080
    command: /ops/sbt/bin/sbt "project srvc_back" run
